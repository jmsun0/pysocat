name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt
      
      - name: Install python requirements
        run: |
          python3 -m pip install -r requirements.txt -r requirements-dev.txt
      
      - name: Build wheel
        run: python3 setup.py bdist_wheel

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./dist/*

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./dist/*

  build_exe:
    name: Build exe on ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # [ubuntu-20.04, windows-2019, macOS-11]
        # os: [ubuntu-20.04,windows-2019]
        os: [ubuntu-20.04]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup system
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends ccache
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt
      
      - name: Install python requirements
        run: |
          python3 -m pip install -r requirements.txt -r requirements-dev.txt
      
      # - name: Setup ccache
      #   uses: hendrikmuhs/ccache-action@v1.2
      #   with:
      #     key: ${{ matrix.os }}-${{ matrix.type }}
      
      # - name: Build executable
      #   uses: Nuitka/Nuitka-Action@main
      #   with:
      #     nuitka-version: main
      #     script-name: pysocat.py
      #     onefile: true

      - name: Setup Nuitka Environment Variables
        shell: bash
        run: |
          echo "NUITKA_CACHE_DIR=$PWD/cache/nuitka" >> $GITHUB_ENV
          echo "PYTHON_VERSION=$(python3 --version | awk '{print $2}' | cut -d '.' -f 1,2)" >> $GITHUB_ENV

      - name: Cache Nuitka directory
        uses: actions/cache@v3
        with:
          path: ${{ env.NUITKA_CACHE_DIR }}
          key: ${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-nuitka-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-
            ${{ runner.os }}-python-
            ${{ runner.os }}-

      - name: Build executable
        run: |
          python3 setup.py bdist_exe

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./dist/*

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./dist/*

# git tag -d 0.0.1
# git push --delete origin 0.0.1

# git tag 0.0.1
# git push origin 0.0.1